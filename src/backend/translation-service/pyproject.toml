[build-system]
requires = ["setuptools>=69.0.2", "wheel>=0.42.0"]
build-backend = "setuptools.build_meta"

[project]
name = "translation-service"
version = "1.0.0"
description = "AI-powered security detection translation service"
authors = [
    { name = "Security Engineering Team" }
]
requires-python = ">=3.11"
license = { text = "MIT" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Information Technology",
    "Topic :: Security",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License"
]
dependencies = [
    "fastapi==0.104.0",
    "uvicorn==0.24.0",
    "pydantic==2.4.0",
    "langchain==0.0.330",
    "openai==1.2.0",
    "prometheus-client==0.17.0",
    "python-json-logger==2.0.7",
    "pika==1.3.2"
]

[project.optional-dependencies]
dev = [
    "pytest==7.4.0",
    "black==23.10.0",
    "isort==5.12.0",
    "mypy==1.6.0",
    "flake8==6.1.0"
]
security = [
    "bandit==1.7.5",
    "safety==2.3.5"
]
docs = [
    "sphinx==7.2.6"
]

[tool.black]
line-length = 100
target-version = ["py311"]
include = "\.pyi?$"
extend-exclude = '''
/(
    \.git
    | \.mypy_cache
    | \.pytest_cache
    | \.venv
    | build
    | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
known_first_party = ["translation_service"]
known_third_party = ["fastapi", "pydantic", "langchain"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
disallow_any_generics = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--strict-markers --cov=translation_service --cov-report=term-missing --cov-report=xml"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests"
]

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203"]
exclude = [".git", "__pycache__", "build", "dist", ".venv"]
per-file-ignores = """
    __init__.py: F401
    test_*.py: S101
"""
max-complexity = 10

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:"
]
fail_under = 90

[tool.bandit]
targets = ["translation_service"]
exclude_dirs = ["tests", "docs"]
skips = ["B101"]

[tool.pre-commit]
repos = [
    { repo = "https://github.com/pre-commit/pre-commit-hooks", rev = "v4.5.0" },
    { repo = "https://github.com/psf/black", rev = "23.10.0" },
    { repo = "https://github.com/PyCQA/isort", rev = "5.12.0" },
    { repo = "https://github.com/PyCQA/flake8", rev = "6.1.0" }
]