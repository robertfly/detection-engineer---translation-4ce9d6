# Web Frontend Kubernetes Manifest
# Version: v1.0.0
# Purpose: Defines deployment and service configurations for the Detection Translation Platform web frontend
# Dependencies:
#   - detection-platform-config (ConfigMap)
#   - detection-platform-secrets (Secret)
# Security: Implements pod security context, resource limits, and non-root execution

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: detection-platform
  labels:
    app: detection-translator
    component: web
    tier: frontend
    app.kubernetes.io/name: detection-translator
    app.kubernetes.io/component: web
    app.kubernetes.io/part-of: detection-translation-platform
  annotations:
    kubernetes.io/description: "Detection Translation Platform Web Frontend"
    prometheus.io/scrape: "true"
    prometheus.io/port: "80"
    prometheus.io/path: "/metrics"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: detection-translator
      component: web
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: detection-translator
        component: web
      annotations:
        checksum/config: ${CONFIG_CHECKSUM}
        checksum/secrets: ${SECRETS_CHECKSUM}
    spec:
      # Security Context for Pod
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: web
          image: detection-translator/web:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          # Container Security Context
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          # Resource Management
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          # Health Checks
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 2
          # Configuration
          envFrom:
            - configMapRef:
                name: detection-platform-config
            - secretRef:
                name: detection-platform-secrets
          # Volume Mounts
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: nginx-cache
              mountPath: /var/cache/nginx
      # Volumes
      volumes:
        - name: tmp
          emptyDir: {}
        - name: nginx-cache
          emptyDir: {}
      # High Availability Configuration
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: component
                      operator: In
                      values:
                        - web
                topologyKey: kubernetes.io/hostname
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/role
                    operator: In
                    values:
                      - worker
      # Topology Spread Constraints
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfied: ScheduleAnyway
          labelSelector:
            matchLabels:
              component: web
      # Service Account
      serviceAccountName: web-frontend
      # Pod Termination
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: web
  namespace: detection-platform
  labels:
    app: detection-translator
    component: web
    app.kubernetes.io/name: detection-translator
    app.kubernetes.io/component: web
    app.kubernetes.io/part-of: detection-translation-platform
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
  selector:
    app: detection-translator
    component: web
  sessionAffinity: None